diff --git assets/brunch-config.js assets/brunch-config.js
index b15df46..35ca792 100644
--- assets/brunch-config.js
+++ assets/brunch-config.js
@@ -7,8 +7,8 @@ exports.config = {
       // To use a separate vendor.js bundle, specify two files path
       // http://brunch.io/docs/config#-files-
       // joinTo: {
-      //   "js/app.js": /^js/,
-      //   "js/vendor.js": /^(?!js)/
+      //  "js/app.js": /^(js)/,
+      //  "js/vendor.js": /^(vendor)|(deps)/
       // }
       //
       // To change the order of concatenation of files, explicitly mention here
diff --git assets/css/phoenix.css assets/css/phoenix.css
index 0b406d7..df69d80 100644
--- assets/css/phoenix.css
+++ assets/css/phoenix.css
@@ -17,6 +17,11 @@ body, form, ul, table {
 /* Phoenix flash messages */
 .alert:empty { display: none; }
 
+/* Phoenix inline forms in links and buttons */
+form.link, form.button {
+  display: inline;
+}
+
 /* Custom page header */
 .header {
   border-bottom: 1px solid #e5e5e5;
diff --git assets/package.json assets/package.json
index 4cc3986..c5423df 100644
--- assets/package.json
+++ assets/package.json
@@ -10,9 +10,9 @@
     "phoenix_html": "file:../deps/phoenix_html"
   },
   "devDependencies": {
-    "babel-brunch": "6.1.1",
-    "brunch": "2.10.9",
+    "babel-brunch": "6.0.6",
+    "brunch": "2.10.7",
     "clean-css-brunch": "2.10.0",
-    "uglify-js-brunch": "2.10.0"
+    "uglify-js-brunch": "2.1.1"
   }
 }
diff --git config/config.exs config/config.exs
index 301905d..3a65abf 100644
--- config/config.exs
+++ config/config.exs
@@ -10,10 +10,10 @@ config :sample_app,
   ecto_repos: [SampleApp.Repo]
 
 # Configures the endpoint
-config :sample_app, SampleAppWeb.Endpoint,
+config :sample_app, SampleApp.Web.Endpoint,
   url: [host: "localhost"],
   secret_key_base: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
-  render_errors: [view: SampleAppWeb.ErrorView, accepts: ~w(html json)],
+  render_errors: [view: SampleApp.Web.ErrorView, accepts: ~w(html json)],
   pubsub: [name: SampleApp.PubSub,
            adapter: Phoenix.PubSub.PG2]
 
diff --git config/dev.exs config/dev.exs
index 266bcda..f6c5756 100644
--- config/dev.exs
+++ config/dev.exs
@@ -6,7 +6,7 @@ use Mix.Config
 # The watchers configuration can be used to run external
 # watchers to your application. For example, we use it
 # with brunch.io to recompile .js and .css sources.
-config :sample_app, SampleAppWeb.Endpoint,
+config :sample_app, SampleApp.Web.Endpoint,
   http: [port: 4000],
   debug_errors: true,
   code_reloader: true,
@@ -31,13 +31,13 @@ config :sample_app, SampleAppWeb.Endpoint,
 # different ports.
 
 # Watch static and templates for browser reloading.
-config :sample_app, SampleAppWeb.Endpoint,
+config :sample_app, SampleApp.Web.Endpoint,
   live_reload: [
     patterns: [
       ~r{priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$},
       ~r{priv/gettext/.*(po)$},
-      ~r{lib/sample_app_web/views/.*(ex)$},
-      ~r{lib/sample_app_web/templates/.*(eex)$}
+      ~r{lib/sample_app/web/views/.*(ex)$},
+      ~r{lib/sample_app/web/templates/.*(eex)$}
     ]
   ]
 
diff --git config/prod.exs config/prod.exs
index ab7536b..e911c6c 100644
--- config/prod.exs
+++ config/prod.exs
@@ -3,18 +3,18 @@ use Mix.Config
 # For production, we often load configuration from external
 # sources, such as your system environment. For this reason,
 # you won't find the :http configuration below, but set inside
-# SampleAppWeb.Endpoint.init/2 when load_from_system_env is
-# true. Any dynamic configuration should be done there.
+# SampleApp.Web.Endpoint.load_from_system_env/1 dynamically.
+# Any dynamic configuration should be moved to such function.
 #
 # Don't forget to configure the url host to something meaningful,
 # Phoenix uses this information when generating URLs.
 #
 # Finally, we also include the path to a cache manifest
 # containing the digested version of static files. This
-# manifest is generated by the mix phx.digest task
+# manifest is generated by the mix phoenix.digest task
 # which you typically run after static files are built.
-config :sample_app, SampleAppWeb.Endpoint,
-  load_from_system_env: true,
+config :sample_app, SampleApp.Web.Endpoint,
+  on_init: {SampleApp.Web.Endpoint, :load_from_system_env, []},
   url: [host: "example.com", port: 80],
   cache_static_manifest: "priv/static/cache_manifest.json"
 
@@ -26,7 +26,7 @@ config :logger, level: :info
 # To get SSL working, you will need to add the `https` key
 # to the previous section and set your `:url` port to 443:
 #
-#     config :sample_app, SampleAppWeb.Endpoint,
+#     config :sample_app, SampleApp.Web.Endpoint,
 #       ...
 #       url: [host: "example.com", port: 443],
 #       https: [:inet6,
@@ -41,7 +41,7 @@ config :logger, level: :info
 # We also recommend setting `force_ssl`, ensuring no data is
 # ever sent via http, always redirecting to https:
 #
-#     config :sample_app, SampleAppWeb.Endpoint,
+#     config :sample_app, SampleApp.Web.Endpoint,
 #       force_ssl: [hsts: true]
 #
 # Check `Plug.SSL` for all available options in `force_ssl`.
@@ -56,7 +56,7 @@ config :logger, level: :info
 # Alternatively, you can configure exactly which server to
 # start per endpoint:
 #
-#     config :sample_app, SampleAppWeb.Endpoint, server: true
+#     config :sample_app, SampleApp.Web.Endpoint, server: true
 #
 
 # Finally import the config/prod.secret.exs
diff --git config/prod.secret.exs config/prod.secret.exs
index b7d67b4..1964c51 100644
--- config/prod.secret.exs
+++ config/prod.secret.exs
@@ -1,14 +1,14 @@
 use Mix.Config
 
 # In this file, we keep production configuration that
-# you'll likely want to automate and keep away from
+# you likely want to automate and keep it away from
 # your version control system.
 #
 # You should document the content of this
 # file or create a script for recreating it, since it's
 # kept out of version control and might be hard to recover
-# or recreate for your teammates (or yourself later on).
-config :sample_app, SampleAppWeb.Endpoint,
+# or recreate for your teammates (or you later on).
+config :sample_app, SampleApp.Web.Endpoint,
   secret_key_base: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
 
 # Configure your database
diff --git config/test.exs config/test.exs
index f6ca638..bbcae6f 100644
--- config/test.exs
+++ config/test.exs
@@ -2,7 +2,7 @@ use Mix.Config
 
 # We don't run a server during test. If one is required,
 # you can enable the server option below.
-config :sample_app, SampleAppWeb.Endpoint,
+config :sample_app, SampleApp.Web.Endpoint,
   http: [port: 4001],
   server: false
 
diff --git lib/sample_app/application.ex lib/sample_app/application.ex
index 5578069..c354fc6 100644
--- lib/sample_app/application.ex
+++ lib/sample_app/application.ex
@@ -1,7 +1,7 @@
 defmodule SampleApp.Application do
   use Application
 
-  # See https://hexdocs.pm/elixir/Application.html
+  # See http://elixir-lang.org/docs/stable/elixir/Application.html
   # for more information on OTP Applications
   def start(_type, _args) do
     import Supervisor.Spec
@@ -11,21 +11,14 @@ defmodule SampleApp.Application do
       # Start the Ecto repository
       supervisor(SampleApp.Repo, []),
       # Start the endpoint when the application starts
-      supervisor(SampleAppWeb.Endpoint, []),
+      supervisor(SampleApp.Web.Endpoint, []),
       # Start your own worker by calling: SampleApp.Worker.start_link(arg1, arg2, arg3)
       # worker(SampleApp.Worker, [arg1, arg2, arg3]),
     ]
 
-    # See https://hexdocs.pm/elixir/Supervisor.html
+    # See http://elixir-lang.org/docs/stable/elixir/Supervisor.html
     # for other strategies and supported options
     opts = [strategy: :one_for_one, name: SampleApp.Supervisor]
     Supervisor.start_link(children, opts)
   end
-
-  # Tell Phoenix to update the endpoint configuration
-  # whenever the application is updated.
-  def config_change(changed, _new, removed) do
-    SampleAppWeb.Endpoint.config_change(changed, removed)
-    :ok
-  end
 end
diff --git lib/sample_app_web/channels/user_socket.ex lib/sample_app/web/channels/user_socket.ex
similarity index 85%
rename from data/sample-app/1.3.0/lib/sample_app_web/channels/user_socket.ex
rename to data/sample-app/1.3.0-rc.2/lib/sample_app/web/channels/user_socket.ex
index 80c0cfa..074b2b5 100644
--- lib/sample_app_web/channels/user_socket.ex
+++ lib/sample_app/web/channels/user_socket.ex
@@ -1,8 +1,8 @@
-defmodule SampleAppWeb.UserSocket do
+defmodule SampleApp.Web.UserSocket do
   use Phoenix.Socket
 
   ## Channels
-  # channel "room:*", SampleAppWeb.RoomChannel
+  # channel "room:*", SampleApp.Web.RoomChannel
 
   ## Transports
   transport :websocket, Phoenix.Transports.WebSocket
@@ -30,7 +30,7 @@ defmodule SampleAppWeb.UserSocket do
   # Would allow you to broadcast a "disconnect" event and terminate
   # all active sockets and channels for a given user:
   #
-  #     SampleAppWeb.Endpoint.broadcast("user_socket:#{user.id}", "disconnect", %{})
+  #     SampleApp.Web.Endpoint.broadcast("user_socket:#{user.id}", "disconnect", %{})
   #
   # Returning `nil` makes this socket anonymous.
   def id(_socket), do: nil
diff --git a/data/sample-app/1.3.0-rc.2/lib/sample_app/web/controllers/page_controller.ex lib/sample_app/web/controllers/page_controller.ex
new file mode 100644
index 0000000..e9ed2bf
--- /dev/null
+++ lib/sample_app/web/controllers/page_controller.ex
@@ -0,0 +1,7 @@
+defmodule SampleApp.Web.PageController do
+  use SampleApp.Web, :controller
+
+  def index(conn, _params) do
+    render conn, "index.html"
+  end
+end
diff --git lib/sample_app_web/endpoint.ex lib/sample_app/web/endpoint.ex
similarity index 67%
rename from data/sample-app/1.3.0/lib/sample_app_web/endpoint.ex
rename to data/sample-app/1.3.0-rc.2/lib/sample_app/web/endpoint.ex
index b2c3e46..c98cec5 100644
--- lib/sample_app_web/endpoint.ex
+++ lib/sample_app/web/endpoint.ex
@@ -1,7 +1,7 @@
-defmodule SampleAppWeb.Endpoint do
+defmodule SampleApp.Web.Endpoint do
   use Phoenix.Endpoint, otp_app: :sample_app
 
-  socket "/socket", SampleAppWeb.UserSocket
+  socket "/socket", SampleApp.Web.UserSocket
 
   # Serve at "/" the static files from "priv/static" directory.
   #
@@ -38,20 +38,17 @@ defmodule SampleAppWeb.Endpoint do
     key: "_sample_app_key",
     signing_salt: "abcdefgh"
 
-  plug SampleAppWeb.Router
+  plug SampleApp.Web.Router
 
   @doc """
-  Callback invoked for dynamically configuring the endpoint.
+  Dynamically loads configuration from the system environment
+  on startup.
 
-  It receives the endpoint configuration and checks if
-  configuration should be loaded from the system environment.
+  It receives the endpoint configuration from the config files
+  and must return the updated configuration.
   """
-  def init(_key, config) do
-    if config[:load_from_system_env] do
-      port = System.get_env("PORT") || raise "expected the PORT environment variable to be set"
-      {:ok, Keyword.put(config, :http, [:inet6, port: port])}
-    else
-      {:ok, config}
-    end
+  def load_from_system_env(config) do
+    port = System.get_env("PORT") || raise "expected the PORT environment variable to be set"
+    {:ok, Keyword.put(config, :http, [:inet6, port: port])}
   end
 end
diff --git lib/sample_app_web/gettext.ex lib/sample_app/web/gettext.ex
similarity index 90%
rename from data/sample-app/1.3.0/lib/sample_app_web/gettext.ex
rename to data/sample-app/1.3.0-rc.2/lib/sample_app/web/gettext.ex
index 448a09d..f88b4c0 100644
--- lib/sample_app_web/gettext.ex
+++ lib/sample_app/web/gettext.ex
@@ -1,11 +1,11 @@
-defmodule SampleAppWeb.Gettext do
+defmodule SampleApp.Web.Gettext do
   @moduledoc """
   A module providing Internationalization with a gettext-based API.
 
   By using [Gettext](https://hexdocs.pm/gettext),
   your module gains a set of macros for translations, for example:
 
-      import SampleAppWeb.Gettext
+      import SampleApp.Web.Gettext
 
       # Simple translation
       gettext "Here is the string to translate"
diff --git lib/sample_app_web/router.ex lib/sample_app/web/router.ex
similarity index 75%
rename from data/sample-app/1.3.0/lib/sample_app_web/router.ex
rename to data/sample-app/1.3.0-rc.2/lib/sample_app/web/router.ex
index 67e88f4..fe0f0ac 100644
--- lib/sample_app_web/router.ex
+++ lib/sample_app/web/router.ex
@@ -1,5 +1,5 @@
-defmodule SampleAppWeb.Router do
-  use SampleAppWeb, :router
+defmodule SampleApp.Web.Router do
+  use SampleApp.Web, :router
 
   pipeline :browser do
     plug :accepts, ["html"]
@@ -13,14 +13,14 @@ defmodule SampleAppWeb.Router do
     plug :accepts, ["json"]
   end
 
-  scope "/", SampleAppWeb do
+  scope "/", SampleApp.Web do
     pipe_through :browser # Use the default browser stack
 
     get "/", PageController, :index
   end
 
   # Other scopes may use custom stacks.
-  # scope "/api", SampleAppWeb do
+  # scope "/api", SampleApp.Web do
   #   pipe_through :api
   # end
 end
diff --git lib/sample_app_web/templates/layout/app.html.eex lib/sample_app/web/templates/layout/app.html.eex
similarity index 100%
rename from data/sample-app/1.3.0/lib/sample_app_web/templates/layout/app.html.eex
rename to data/sample-app/1.3.0-rc.2/lib/sample_app/web/templates/layout/app.html.eex
diff --git lib/sample_app_web/templates/page/index.html.eex lib/sample_app/web/templates/page/index.html.eex
similarity index 100%
rename from data/sample-app/1.3.0/lib/sample_app_web/templates/page/index.html.eex
rename to data/sample-app/1.3.0-rc.2/lib/sample_app/web/templates/page/index.html.eex
diff --git lib/sample_app_web/views/error_helpers.ex lib/sample_app/web/views/error_helpers.ex
similarity index 85%
rename from data/sample-app/1.3.0/lib/sample_app_web/views/error_helpers.ex
rename to data/sample-app/1.3.0-rc.2/lib/sample_app/web/views/error_helpers.ex
index 34882b0..9cda7c9 100644
--- lib/sample_app_web/views/error_helpers.ex
+++ lib/sample_app/web/views/error_helpers.ex
@@ -1,4 +1,4 @@
-defmodule SampleAppWeb.ErrorHelpers do
+defmodule SampleApp.Web.ErrorHelpers do
   @moduledoc """
   Conveniences for translating and building error messages.
   """
@@ -32,9 +32,9 @@ defmodule SampleAppWeb.ErrorHelpers do
     #     dgettext "errors", "is invalid"
     #
     if count = opts[:count] do
-      Gettext.dngettext(SampleAppWeb.Gettext, "errors", msg, msg, count, opts)
+      Gettext.dngettext(SampleApp.Web.Gettext, "errors", msg, msg, count, opts)
     else
-      Gettext.dgettext(SampleAppWeb.Gettext, "errors", msg, opts)
+      Gettext.dgettext(SampleApp.Web.Gettext, "errors", msg, opts)
     end
   end
 end
diff --git lib/sample_app_web/views/error_view.ex lib/sample_app/web/views/error_view.ex
similarity index 83%
rename from data/sample-app/1.3.0/lib/sample_app_web/views/error_view.ex
rename to data/sample-app/1.3.0-rc.2/lib/sample_app/web/views/error_view.ex
index 58efd34..5670e83 100644
--- lib/sample_app_web/views/error_view.ex
+++ lib/sample_app/web/views/error_view.ex
@@ -1,5 +1,5 @@
-defmodule SampleAppWeb.ErrorView do
-  use SampleAppWeb, :view
+defmodule SampleApp.Web.ErrorView do
+  use SampleApp.Web, :view
 
   def render("404.html", _assigns) do
     "Page not found"
diff --git a/data/sample-app/1.3.0-rc.2/lib/sample_app/web/views/layout_view.ex lib/sample_app/web/views/layout_view.ex
new file mode 100644
index 0000000..c697ae7
--- /dev/null
+++ lib/sample_app/web/views/layout_view.ex
@@ -0,0 +1,3 @@
+defmodule SampleApp.Web.LayoutView do
+  use SampleApp.Web, :view
+end
diff --git a/data/sample-app/1.3.0-rc.2/lib/sample_app/web/views/page_view.ex lib/sample_app/web/views/page_view.ex
new file mode 100644
index 0000000..ff9ee43
--- /dev/null
+++ lib/sample_app/web/views/page_view.ex
@@ -0,0 +1,3 @@
+defmodule SampleApp.Web.PageView do
+  use SampleApp.Web, :view
+end
diff --git lib/sample_app_web.ex lib/sample_app/web/web.ex
similarity index 54%
rename from data/sample-app/1.3.0/lib/sample_app_web.ex
rename to data/sample-app/1.3.0-rc.2/lib/sample_app/web/web.ex
index e9fd1b8..a706482 100644
--- lib/sample_app_web.ex
+++ lib/sample_app/web/web.ex
@@ -1,45 +1,44 @@
-defmodule SampleAppWeb do
+defmodule SampleApp.Web do
   @moduledoc """
-  The entrypoint for defining your web interface, such
-  as controllers, views, channels and so on.
+  A module that keeps using definitions for controllers,
+  views and so on.
 
   This can be used in your application as:
 
-      use SampleAppWeb, :controller
-      use SampleAppWeb, :view
+      use SampleApp.Web, :controller
+      use SampleApp.Web, :view
 
   The definitions below will be executed for every view,
   controller, etc, so keep them short and clean, focused
   on imports, uses and aliases.
 
   Do NOT define functions inside the quoted expressions
-  below. Instead, define any helper function in modules
-  and import those modules here.
+  below.
   """
 
   def controller do
     quote do
-      use Phoenix.Controller, namespace: SampleAppWeb
+      use Phoenix.Controller, namespace: SampleApp.Web
       import Plug.Conn
-      import SampleAppWeb.Router.Helpers
-      import SampleAppWeb.Gettext
+      import SampleApp.Web.Router.Helpers
+      import SampleApp.Web.Gettext
     end
   end
 
   def view do
     quote do
-      use Phoenix.View, root: "lib/sample_app_web/templates",
-                        namespace: SampleAppWeb
+      use Phoenix.View, root: "lib/sample_app/web/templates",
+                        namespace: SampleApp.Web
 
       # Import convenience functions from controllers
-      import Phoenix.Controller, only: [get_flash: 2, view_module: 1]
+      import Phoenix.Controller, only: [get_csrf_token: 0, get_flash: 2, view_module: 1]
 
       # Use all HTML functionality (forms, tags, etc)
       use Phoenix.HTML
 
-      import SampleAppWeb.Router.Helpers
-      import SampleAppWeb.ErrorHelpers
-      import SampleAppWeb.Gettext
+      import SampleApp.Web.Router.Helpers
+      import SampleApp.Web.ErrorHelpers
+      import SampleApp.Web.Gettext
     end
   end
 
@@ -54,7 +53,7 @@ defmodule SampleAppWeb do
   def channel do
     quote do
       use Phoenix.Channel
-      import SampleAppWeb.Gettext
+      import SampleApp.Web.Gettext
     end
   end
 
diff --git lib/sample_app.ex b/data/sample-app/1.3.0/lib/sample_app.ex
deleted file mode 100644
index 8b25718..0000000
--- lib/sample_app.ex
+++ /dev/null
@@ -1,9 +0,0 @@
-defmodule SampleApp do
-  @moduledoc """
-  SampleApp keeps the contexts that define your domain
-  and business logic.
-
-  Contexts are also responsible for managing your data, regardless
-  if it comes from the database, an external API or others.
-  """
-end
diff --git lib/sample_app_web/controllers/page_controller.ex b/data/sample-app/1.3.0/lib/sample_app_web/controllers/page_controller.ex
deleted file mode 100644
index c981617..0000000
--- lib/sample_app_web/controllers/page_controller.ex
+++ /dev/null
@@ -1,7 +0,0 @@
-defmodule SampleAppWeb.PageController do
-  use SampleAppWeb, :controller
-
-  def index(conn, _params) do
-    render conn, "index.html"
-  end
-end
diff --git lib/sample_app_web/views/layout_view.ex b/data/sample-app/1.3.0/lib/sample_app_web/views/layout_view.ex
deleted file mode 100644
index 0e4cd22..0000000
--- lib/sample_app_web/views/layout_view.ex
+++ /dev/null
@@ -1,3 +0,0 @@
-defmodule SampleAppWeb.LayoutView do
-  use SampleAppWeb, :view
-end
diff --git lib/sample_app_web/views/page_view.ex b/data/sample-app/1.3.0/lib/sample_app_web/views/page_view.ex
deleted file mode 100644
index b51be24..0000000
--- lib/sample_app_web/views/page_view.ex
+++ /dev/null
@@ -1,3 +0,0 @@
-defmodule SampleAppWeb.PageView do
-  use SampleAppWeb, :view
-end
diff --git mix.exs mix.exs
index b5765ac..ec4b5fa 100644
--- mix.exs
+++ mix.exs
@@ -2,26 +2,22 @@ defmodule SampleApp.Mixfile do
   use Mix.Project
 
   def project do
-    [
-      app: :sample_app,
-      version: "0.0.1",
-      elixir: "~> 1.4",
-      elixirc_paths: elixirc_paths(Mix.env),
-      compilers: [:phoenix, :gettext] ++ Mix.compilers,
-      start_permanent: Mix.env == :prod,
-      aliases: aliases(),
-      deps: deps()
-    ]
+    [app: :sample_app,
+     version: "0.0.1",
+     elixir: "~> 1.4",
+     elixirc_paths: elixirc_paths(Mix.env),
+     compilers: [:phoenix, :gettext] ++ Mix.compilers,
+     start_permanent: Mix.env == :prod,
+     aliases: aliases(),
+     deps: deps()]
   end
 
   # Configuration for the OTP application.
   #
   # Type `mix help compile.app` for more information.
   def application do
-    [
-      mod: {SampleApp.Application, []},
-      extra_applications: [:logger, :runtime_tools]
-    ]
+    [mod: {SampleApp.Application, []},
+     extra_applications: [:logger, :runtime_tools]]
   end
 
   # Specifies which paths to compile per environment.
@@ -32,16 +28,14 @@ defmodule SampleApp.Mixfile do
   #
   # Type `mix help deps` for examples and options.
   defp deps do
-    [
-      {:phoenix, "~> 1.3.0"},
-      {:phoenix_pubsub, "~> 1.0"},
-      {:phoenix_ecto, "~> 3.2"},
-      {:postgrex, ">= 0.0.0"},
-      {:phoenix_html, "~> 2.10"},
-      {:phoenix_live_reload, "~> 1.0", only: :dev},
-      {:gettext, "~> 0.11"},
-      {:cowboy, "~> 1.0"}
-    ]
+    [{:phoenix, "~> 1.3.0-rc"},
+     {:phoenix_pubsub, "~> 1.0"},
+     {:phoenix_ecto, "~> 3.2"},
+     {:postgrex, ">= 0.0.0"},
+     {:phoenix_html, "~> 2.6"},
+     {:phoenix_live_reload, "~> 1.0", only: :dev},
+     {:gettext, "~> 0.11"},
+     {:cowboy, "~> 1.0"}]
   end
 
   # Aliases are shortcuts or tasks specific to the current project.
@@ -51,10 +45,8 @@ defmodule SampleApp.Mixfile do
   #
   # See the documentation for `Mix` for more info on aliases.
   defp aliases do
-    [
-      "ecto.setup": ["ecto.create", "ecto.migrate", "run priv/repo/seeds.exs"],
-      "ecto.reset": ["ecto.drop", "ecto.setup"],
-      "test": ["ecto.create --quiet", "ecto.migrate", "test"]
-    ]
+    ["ecto.setup": ["ecto.create", "ecto.migrate", "run priv/repo/seeds.exs"],
+     "ecto.reset": ["ecto.drop", "ecto.setup"],
+     "test": ["ecto.create --quiet", "ecto.migrate", "test"]]
   end
 end
diff --git test/sample_app_web/controllers/page_controller_test.exs test/sample_app/web/controllers/page_controller_test.exs
similarity index 63%
rename from data/sample-app/1.3.0/test/sample_app_web/controllers/page_controller_test.exs
rename to data/sample-app/1.3.0-rc.2/test/sample_app/web/controllers/page_controller_test.exs
index 23ef554..9ef8fcd 100644
--- test/sample_app_web/controllers/page_controller_test.exs
+++ test/sample_app/web/controllers/page_controller_test.exs
@@ -1,5 +1,5 @@
-defmodule SampleAppWeb.PageControllerTest do
-  use SampleAppWeb.ConnCase
+defmodule SampleApp.Web.PageControllerTest do
+  use SampleApp.Web.ConnCase
 
   test "GET /", %{conn: conn} do
     conn = get conn, "/"
diff --git test/sample_app_web/views/error_view_test.exs test/sample_app/web/views/error_view_test.exs
similarity index 50%
rename from data/sample-app/1.3.0/test/sample_app_web/views/error_view_test.exs
rename to data/sample-app/1.3.0-rc.2/test/sample_app/web/views/error_view_test.exs
index 30b0524..19b51ac 100644
--- test/sample_app_web/views/error_view_test.exs
+++ test/sample_app/web/views/error_view_test.exs
@@ -1,21 +1,21 @@
-defmodule SampleAppWeb.ErrorViewTest do
-  use SampleAppWeb.ConnCase, async: true
+defmodule SampleApp.Web.ErrorViewTest do
+  use SampleApp.Web.ConnCase, async: true
 
   # Bring render/3 and render_to_string/3 for testing custom views
   import Phoenix.View
 
   test "renders 404.html" do
-    assert render_to_string(SampleAppWeb.ErrorView, "404.html", []) ==
+    assert render_to_string(SampleApp.Web.ErrorView, "404.html", []) ==
            "Page not found"
   end
 
   test "render 500.html" do
-    assert render_to_string(SampleAppWeb.ErrorView, "500.html", []) ==
+    assert render_to_string(SampleApp.Web.ErrorView, "500.html", []) ==
            "Internal server error"
   end
 
   test "render any other" do
-    assert render_to_string(SampleAppWeb.ErrorView, "505.html", []) ==
+    assert render_to_string(SampleApp.Web.ErrorView, "505.html", []) ==
            "Internal server error"
   end
 end
diff --git a/data/sample-app/1.3.0-rc.2/test/sample_app/web/views/layout_view_test.exs test/sample_app/web/views/layout_view_test.exs
new file mode 100644
index 0000000..62508b6
--- /dev/null
+++ test/sample_app/web/views/layout_view_test.exs
@@ -0,0 +1,3 @@
+defmodule SampleApp.Web.LayoutViewTest do
+  use SampleApp.Web.ConnCase, async: true
+end
diff --git a/data/sample-app/1.3.0-rc.2/test/sample_app/web/views/page_view_test.exs test/sample_app/web/views/page_view_test.exs
new file mode 100644
index 0000000..d04cf07
--- /dev/null
+++ test/sample_app/web/views/page_view_test.exs
@@ -0,0 +1,3 @@
+defmodule SampleApp.Web.PageViewTest do
+  use SampleApp.Web.ConnCase, async: true
+end
diff --git test/sample_app_web/views/layout_view_test.exs b/data/sample-app/1.3.0/test/sample_app_web/views/layout_view_test.exs
deleted file mode 100644
index 6125800..0000000
--- test/sample_app_web/views/layout_view_test.exs
+++ /dev/null
@@ -1,3 +0,0 @@
-defmodule SampleAppWeb.LayoutViewTest do
-  use SampleAppWeb.ConnCase, async: true
-end
diff --git test/sample_app_web/views/page_view_test.exs b/data/sample-app/1.3.0/test/sample_app_web/views/page_view_test.exs
deleted file mode 100644
index fe4c216..0000000
--- test/sample_app_web/views/page_view_test.exs
+++ /dev/null
@@ -1,3 +0,0 @@
-defmodule SampleAppWeb.PageViewTest do
-  use SampleAppWeb.ConnCase, async: true
-end
diff --git test/support/channel_case.ex test/support/channel_case.ex
index 665b82c..3852306 100644
--- test/support/channel_case.ex
+++ test/support/channel_case.ex
@@ -1,4 +1,4 @@
-defmodule SampleAppWeb.ChannelCase do
+defmodule SampleApp.Web.ChannelCase do
   @moduledoc """
   This module defines the test case to be used by
   channel tests.
@@ -21,7 +21,7 @@ defmodule SampleAppWeb.ChannelCase do
       use Phoenix.ChannelTest
 
       # The default endpoint for testing
-      @endpoint SampleAppWeb.Endpoint
+      @endpoint SampleApp.Web.Endpoint
     end
   end
 
diff --git test/support/conn_case.ex test/support/conn_case.ex
index 7c07f2d..6cbddf0 100644
--- test/support/conn_case.ex
+++ test/support/conn_case.ex
@@ -1,4 +1,4 @@
-defmodule SampleAppWeb.ConnCase do
+defmodule SampleApp.Web.ConnCase do
   @moduledoc """
   This module defines the test case to be used by
   tests that require setting up a connection.
@@ -19,10 +19,10 @@ defmodule SampleAppWeb.ConnCase do
     quote do
       # Import conveniences for testing with connections
       use Phoenix.ConnTest
-      import SampleAppWeb.Router.Helpers
+      import SampleApp.Web.Router.Helpers
 
       # The default endpoint for testing
-      @endpoint SampleAppWeb.Endpoint
+      @endpoint SampleApp.Web.Endpoint
     end
   end
 
